version: "3.7"
services:
  vuln_backend:
    build: ./backend
    restart: always
    ports:
      - 1337:8080
    networks:
      - vuln-net
    environment:
      - spring.datasource.url=jdbc:postgresql://db:54321/vuln
      - spring.datasource.username=postgres
      - spring.datasource.password=vulnvulnvulnpassword
    depends_on:
      - db
    volumes: 
      - type: bind
        source: ./backend
        target: /app
    working_dir: /app
    command: "./mvnw spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.datasource.url=jdbc:postgresql://db:54321/vuln -Dspring.datasource.username=postgres -Dspring.datasource.password=vulnvulnvulnpassword'"
  db:
    image: "postgres:15"
    restart: always
    ports:
      - 54321:54321
    networks:
      - vuln-net
    volumes:
    - ./backend/Vuln_DB.sql:/docker-entrypoint-initdb.d/Vuln_DB.sql 
    command: -p 54321
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: vulnvulnvulnpassword
      POSTGRES_DB: vuln
  vuln_frontend:
    build: ./frontend
    container_name: vuln-frontend
    ports:
    - 8080:8080
    volumes: 
      # - type: bind
      - ./frontend:/app
      - node_modules:/app/node_modules
    working_dir: /app
    command: "npm run serve"
    environment: 
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - .dockerenv

volumes:
  node_modules:
networks:
  vuln-net: